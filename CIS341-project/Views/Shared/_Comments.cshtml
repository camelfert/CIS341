@using CIS341_project.Services
@inject IUserService UserService
@model List<CIS341_project.ViewModels.CommentDTO>

@{
    var currentUser = await UserService.GetUserDetailsAsync();
}

<div class="comments-section">
    @foreach (var comment in Model)
    {
        <div class="comment-bubble">
            <div class="comment-body">
                <p class="comment-author">@comment.AuthorUsername said:</p>
                <p class="comment-content">@comment.CommentContent</p>
            </div>
            <div class="comment-actions">
                <button class="btn btn-outline-success btn-sm comment-vote-btn">@ViewData["comUpvoteCount"] 👍</button>
                <button class="btn btn-outline-danger btn-sm comment-vote-btn">@ViewData["comDownvoteCount"] 👎</button>

                <div class="comment-action-spacer"></div>

                @if (comment.AuthorId == currentUser.userId)
                {
                    <input class="btn btn-primary comment-action-btn btn-sm" type="button" value="Edit" onclick="location.href='@Url.Action("Edit", "Comment", new { id = comment.CommentId })'" />
                    <input class="btn btn-danger comment-action-btn btn-sm" type="button" value="Delete" onclick="location.href='@Url.Action("Delete", "Comment", new { id = comment.CommentId })'" />
                }

                @if (currentUser.userId != null)
                {
                    <button class="reply-button btn btn-success comment-action-btn btn-sm">Reply</button>
                }

            </div>
        </div>

    }

    @if (currentUser.userId != null)
    {
        @using (Html.BeginForm("Create", "Comment", FormMethod.Post))
        {
            @Html.AntiForgeryToken()

            <div class="form-group">
                @Html.TextArea("CommentContent", "", new { @class = "form-control comment-input", placeholder = "Add a comment..." })
                @Html.ValidationMessage("CommentContent", "", new { @class = "text-danger" })
            </div>

            @Html.Hidden("BlogPostId", ViewData["BlogPostId"])
            @Html.Hidden("ParentCommentId", TempData["ParentCommentId"])

            <br/>
            <button type="submit" class="btn btn-primary">Comment</button>
        }
    }
    else
    {
        <p>Please <a href="~/Identity/Account/Login">login</a> or <a href="~/Identity/Account/Register">register an account</a> to leave a comment.</p>
    }

</div>